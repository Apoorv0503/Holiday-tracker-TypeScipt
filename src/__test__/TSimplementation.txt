// import fs from 'fs';
// import path from 'path';

// const componentsPath = path.join(__dirname, '../src/components');
// const appFilePath = path.join(__dirname, '../src/App.tsx');
// const typesFilePath = path.join(__dirname, '../src/types/Holiday.ts');

// describe('TypeScript Project Structure', () => {
//   it('should have .tsx extension for component files', () => {
//     const componentFiles = fs.readdirSync(componentsPath);
//     componentFiles.forEach(file => {
//       expect(path.extname(file)).toBe('.tsx');
//     });
//   });

//   it('should have App.tsx file', () => {
//     expect(fs.existsSync(appFilePath)).toBe(true);
//     expect(path.extname(appFilePath)).toBe('.tsx');
//   });

//   it('should have type annotations in App.tsx', () => {
//     const appFileContent = fs.readFileSync(appFilePath, 'utf8');
//     expect(appFileContent).toMatch(/const\s+\[\w+,\s*\w+\]\s*=\s*useState<Holiday\[\]>\(\);/);
//     expect(appFileContent).toMatch(/const\s+\[\w+,\s*\w+\]\s*=\s*useState<string\s*\|\s*null>\(null\);/);
//     expect(appFileContent).toMatch(/const\s+\w+\s*=\s*async\s*\(\w+\s*:\s*string\)\s*:\s*Promise<void>\s*=>/);
//   });

//   it('should have type definitions in Holiday.ts', () => {
//     const typesFileContent = fs.readFileSync(typesFilePath, 'utf8');
//     expect(typesFileContent).toMatch(/export\s+interface\s+Holiday\s+{/);
//   });
// });
